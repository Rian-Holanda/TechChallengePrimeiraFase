version: '3.4'

services:
  api_producer_techchallenge:
    image: ${DOCKER_HUB_USERNAME}/apiproducertechchallenge
    build:
      context: .
      dockerfile: API_Producer_TechChallenge/Dockerfile
    ports:    
      - '8080:8080'    
      - '8081:8081'
    networks:   
      - mynetwork
    depends_on:
      - rabbitmq
      - db  
  consumidor_pessoas_techchallenge:
    image: ${DOCKER_HUB_USERNAME}/consumidorpessoastechchallenge
    build:
      context: .
      dockerfile: Consumidor_Pessoas_TechChallenge/Dockerfile
    networks:   
      - mynetwork
    depends_on:
      - rabbitmq
      - db
  consumidor_regioes_techchallenge:
    image: ${DOCKER_HUB_USERNAME}/consumidorregioestechchallenge
    build:
      context: .
      dockerfile: Consumidor_Regioes_TechChallenge/Dockerfile
    networks:   
      - mynetwork
    depends_on:
      - rabbitmq
      - db 
    
  rabbitmq:    
    image: 'rabbitmq:3-management'    
    hostname: 'rabbitmq'    
    ports:    
      - '5672:5672'    
      - '15672:15672'    
    networks:   
      - mynetwork  
  
  db:
    image: mcr.microsoft.com/mssql/server
    container_name: sqlserver
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "1q2w3e4r@#"
    ports:
      - "1433:1433"
    networks:   
      - mynetwork
       
  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    networks:   
      - mynetwork

  grafana:
    image: grafana/grafana
    ports:
      - 3000:3000
    networks:   
      - mynetwork
networks:  
  mynetwork:
